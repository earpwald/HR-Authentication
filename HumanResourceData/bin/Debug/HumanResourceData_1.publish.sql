/*
Deployment script for HumanResourceData

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HumanResourceData"
:setvar DefaultFilePrefix "HumanResourceData"
:setvar DefaultDataPath "C:\Users\earpwald\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\Projects\"
:setvar DefaultLogPath "C:\Users\earpwald\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\Projects\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key d92c0f97-82ae-4191-a6f5-f8876fca9216 is skipped, element [dbo].[User].[username] (SqlSimpleColumn) will not be renamed to Username';


GO
PRINT N'Rename refactoring operation with key 565418d0-d2ca-4ef8-b3a9-eeb87372d4ff is skipped, element [dbo].[User].[Password] (SqlSimpleColumn) will not be renamed to Pass';


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [Id]            INT            NOT NULL,
    [Username]      NVARCHAR (50)  NOT NULL,
    [FirstName]     NVARCHAR (50)  NOT NULL,
    [LastName]      NVARCHAR (50)  NOT NULL,
    [Email]         NVARCHAR (MAX) NOT NULL,
    [Pass]          NVARCHAR (MAX) NOT NULL,
    [TwoStepActive] BIT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating FK_LoginHistory_User...';


GO
ALTER TABLE [dbo].[LoginHistory] WITH NOCHECK
    ADD CONSTRAINT [FK_LoginHistory_User] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd92c0f97-82ae-4191-a6f5-f8876fca9216')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d92c0f97-82ae-4191-a6f5-f8876fca9216')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '565418d0-d2ca-4ef8-b3a9-eeb87372d4ff')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('565418d0-d2ca-4ef8-b3a9-eeb87372d4ff')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

MERGE INTO [User] AS Target 
USING (VALUES 
        (1,'janderson','James','Anderson', 'janderson20@hotmail.co.uk', 'pass', 0), 
        (2,'jsmith','James','Smith', 'j.smith@hotmail.co.uk', 'pass', 0)
) 
AS Source (Id, Username, FirstName, LastName, Email, Pass, TwoStepActive) 
ON Target.Id = Source.Id 
WHEN NOT MATCHED BY TARGET THEN
INSERT (Username, FirstName, LastName, Email, Pass, TwoStepActive) 
VALUES (Username, FirstName, LastName, Email, Pass, TwoStepActive);
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[LoginHistory] WITH CHECK CHECK CONSTRAINT [FK_LoginHistory_User];


GO
PRINT N'Update complete.'
GO
