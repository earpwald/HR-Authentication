/*
Deployment script for HumanResourceData

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HumanResourceData"
:setvar DefaultFilePrefix "HumanResourceData"
:setvar DefaultDataPath "C:\Users\earpwald\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\Projects\"
:setvar DefaultLogPath "C:\Users\earpwald\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\Projects\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping FK_LoginHistory_User...';


GO
ALTER TABLE [dbo].[LoginHistory] DROP CONSTRAINT [FK_LoginHistory_User];


GO
PRINT N'Starting rebuilding table [dbo].[LoginHistory]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LoginHistory] (
    [Id]               INT           NOT NULL,
    [UserId]           INT           NULL,
    [Username]         NVARCHAR (50) NULL,
    [LoginAttemptTime] DATETIME      NOT NULL,
    [Successful]       BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LoginHistory])
    BEGIN
        
        INSERT INTO [dbo].[tmp_ms_xx_LoginHistory] ([Id], [UserId], [LoginAttemptTime], [Successful])
        SELECT   [Id],
                 [UserId],
                 [LoginAttemptTime],
                 [Successful]
        FROM     [dbo].[LoginHistory]
        ORDER BY [Id] ASC;
        
    END

DROP TABLE [dbo].[LoginHistory];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LoginHistory]', N'LoginHistory';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating FK_LoginHistory_User...';


GO
ALTER TABLE [dbo].[LoginHistory] WITH NOCHECK
    ADD CONSTRAINT [FK_LoginHistory_User] FOREIGN KEY ([UserId]) REFERENCES [dbo].[User] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]		
			   (localdb)\Projects			
--------------------------------------------------------------------------------------
*/

MERGE INTO [User] AS Target 
USING (VALUES 
        (1,'janderson','James','Anderson', 'janderson20@hotmail.co.uk', 'pass', 0), 
        (2,'jsmith','James','Smith', 'j.smith@hotmail.co.uk', 'pass', 0)
) 
AS Source (Id, Username, FirstName, LastName, Email, Pass, TwoStepActive) 
ON Target.Id = Source.Id 
WHEN NOT MATCHED BY TARGET THEN
INSERT (Id, Username, FirstName, LastName, Email, Pass, TwoStepActive) 
VALUES (Id, Username, FirstName, LastName, Email, Pass, TwoStepActive);
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[LoginHistory] WITH CHECK CHECK CONSTRAINT [FK_LoginHistory_User];


GO
PRINT N'Update complete.'
GO
